services:
  
  traefik:
    image: traefik:${TRAEFIK_VERSION:-2.11}
    container_name: traefik
    restart: unless-stopped
    command:
      - --api.dashboard=${TRAEFIK_DASHBOARD_ENABLED:-false}
      - --log.level=${TRAEFIK_LOG_LEVEL:-INFO}
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --providers.docker.network=${TRAEFIK_NETWORK:-proxy_network}
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --entrypoints.web.http.redirections.entryPoint.to=websecure
      - --entrypoints.web.http.redirections.entryPoint.scheme=https
      - --certificatesresolvers.letsencrypt.acme.email=${ACME_EMAIL}
      - --certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json
      - --certificatesresolvers.letsencrypt.acme.httpchallenge.entrypoint=web
    ports:
      - "${TRAEFIK_HTTP_PORT:-80}:80"
      - "${TRAEFIK_HTTPS_PORT:-443}:443"
      - "${TRAEFIK_DASHBOARD_PORT:-8020}:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ${CORE_CONFIG_PATH}/letsencrypt:/letsencrypt
      - ${CORE_CONFIG_PATH}/traefik:/etc/traefik
    networks:
      - proxy_network
    labels:
      - "traefik.enable=false"
      # Dashboard routing
      - "traefik.http.routers.traefik-dashboard.rule=Host(`${DOMAIN}`) && PathPrefix(`/traefik`)"
      - "traefik.http.routers.traefik-dashboard.entrypoints=websecure"
      - "traefik.http.routers.traefik-dashboard.tls.certresolver=letsencrypt"
      - "traefik.http.routers.traefik-dashboard.middlewares=traefik-auth,traefik-strip"
      # Strip prefix middleware
      - "traefik.http.middlewares.traefik-strip.stripprefix.prefixes=/traefik"
      # Basic auth middleware (optional but recommended)
      - "traefik.http.middlewares.traefik-auth.basicauth.users=${TRAEFIK_AUTH_USERS}"
      - "traefik.http.services.traefik-dashboard.loadbalancer.server.port=8080"

  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer
    restart: unless-stopped
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "${PORTAINER_CONTAINER}/portainer/data:/data"
    labels: 
      - "traefik.enable=true"
      # Main portainer routing
      - "traefik.http.routers.portainer.rule=Host(`${SERVICES_DOMAIN}`) && PathPrefix(`/portainer`)"
      - "traefik.http.routers.portainer.entrypoints=websecure"
      - "traefik.http.routers.portainer.tls.certresolver=letsencrypt"
      - "traefik.http.routers.portainer.middlewares=portainer-strip"
      # Strip prefix middleware
      - "traefik.http.middlewares.portainer-strip.stripprefix.prefixes=/portainer"
      - "traefik.http.services.portainer.loadbalancer.server.port=9000"
    networks:
      - proxy_network

  cloudflared_tunnel:
    image: cloudflare/cloudflared:latest
    container_name: cloudflared_tunnel
    restart: unless-stopped
    command: tunnel run
    environment: 
      - TUNNEL_TOKEN=${CLOUDFLARE_TUNNEL_TOKEN}
    volumes:
      - ${CORE_CONFIG_PATH}/cloudflared_tun:/etc/cloudflared
    networks:
      - proxy_network

networks:
  proxy_network:
     name: ${TRAEFIK_NETWORK:-proxy_network}
     driver: bridge
     external: ${ENABLE_SUBPROXY:-false}