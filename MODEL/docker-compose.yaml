version: "3.9"

services:
  traefik:
    image: traefik:v3.0
    container_name: traefik_revproxy
    command:
      - "--api.dashboard=true"
      - "--api.insecure=false"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.letsencrypt.acme.tlschallenge=true"
      - "--certificatesresolvers.letsencrypt.acme.email=${ACME_EMAIL}"
      - "--certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json"
      - "--certificatesresolvers.letsencrypt.acme.caserver=https://acme-v02.api.letsencrypt.org/directory"
      - "--log.level=INFO"
      - "--accesslog=true"
      - "--global.sendanonymoususage=false"
    ports:
      - "80:80"
      - "443:443"
      - "4040:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /volumes/${INTEGRATOR_NAME}/${COMPANY_NAME}/traefikTLS:/letsencrypt
      - /volumes/${INTEGRATOR_NAME}/${COMPANY_NAME}/traefikLOGS:/var/log/traefik
    networks:
      - traefik_network
      - odoo_network
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.rule=Host(`traefik.${DOMAIN}`)"
      - "traefik.http.routers.traefik.entrypoints=websecure"
      - "traefik.http.routers.traefik.tls.certresolver=letsencrypt"
      - "traefik.http.routers.traefik.service=api@internal"
      - "traefik.http.routers.traefik.middlewares=traefik-auth"
      - "traefik.http.middlewares.traefik-auth.basicauth.users=${TRAEFIK_BASIC_AUTH}"
      - "traefik.http.routers.http-catchall.rule=hostregexp(`{host:.+}`)"
      - "traefik.http.routers.http-catchall.entrypoints=web"
      - "traefik.http.routers.http-catchall.middlewares=redirect-to-https"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
    security_opt:
      - no-new-privileges:true

  db:
    image: postgres:15-alpine
    container_name: odoo_db
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: odoo
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      PGDATA: /var/lib/postgresql/data/pgdata
    env_file:
      - .env
    volumes:
      - /volumes/${INTEGRATOR_NAME}/${COMPANY_NAME}/odooDB:/var/lib/postgresql/data/pgdata
    networks:
      - odoo_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U odoo"]
      interval: 30s
      timeout: 10s
      retries: 5
    security_opt:
      - no-new-privileges:true

  odoo:
    image: odoo:17
    container_name: odoo_web
    depends_on:
      db:
        condition: service_healthy
    environment:
      HOST: db
      USER: odoo
      PASSWORD: ${POSTGRES_PASSWORD}
      ADMIN_PASSWORD: ${ODOO_ADMIN}
    env_file:
      - .env
    volumes:
      - /volumes/${INTEGRATOR_NAME}/${COMPANY_NAME}/odooWEB:/var/lib/odoo
      - /volumes/${INTEGRATOR_NAME}/${COMPANY_NAME}/odooADD_ON:/mnt/extra-addons
      - /opt/MEIDAI/config/odoo.conf:/etc/odoo/odoo.conf:ro
      - /volumes/${INTEGRATOR_NAME}/${COMPANY_NAME}/odooLOGS:/var/log/odoo
    networks:
      - odoo_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8069/web/health"]
      interval: 30s
      timeout: 10s
      retries: 20
      start_period: 40s
    security_opt:
      - no-new-privileges:true
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.odoo.rule=Host(`${DOMAIN}`)"
      - "traefik.http.routers.odoo.entrypoints=websecure"
      - "traefik.http.routers.odoo.tls.certresolver=letsencrypt"
      - "traefik.http.services.odoo.loadbalancer.server.port=8069"
      - "traefik.http.routers.odoo-longpolling.rule=Host(`${DOMAIN}`) && PathPrefix(`/longpolling`)"
      - "traefik.http.routers.odoo-longpolling.entrypoints=websecure"
      - "traefik.http.routers.odoo-longpolling.tls.certresolver=letsencrypt"
      - "traefik.http.services.odoo-longpolling.loadbalancer.server.port=8072"
      - "traefik.http.routers.odoo.middlewares=odoo-headers,odoo-ratelimit"
      - "traefik.http.middlewares.odoo-headers.headers.customrequestheaders.X-Forwarded-Proto=https"
      - "traefik.http.middlewares.odoo-headers.headers.customrequestheaders.X-Forwarded-For="
      - "traefik.http.middlewares.odoo-headers.headers.frameDeny=true"
      - "traefik.http.middlewares.odoo-headers.headers.contentTypeNosniff=true"
      - "traefik.http.middlewares.odoo-headers.headers.customresponseheaders.X-XSS-Protection=1; mode=block"
      - "traefik.http.middlewares.odoo-headers.headers.stsSeconds=31536000"
      - "traefik.http.middlewares.odoo-headers.headers.stsIncludeSubdomains=true"
      - "traefik.http.middlewares.odoo-ratelimit.ratelimit.average=10"
      - "traefik.http.middlewares.odoo-ratelimit.ratelimit.period=1m"
      - "traefik.http.middlewares.odoo-ratelimit.ratelimit.burst=20"

  redis:
    image: redis:7-alpine
    container_name: odoo_redis
    command: redis-server --requirepass ${REDIS_PASSWORD}
    env_file:
      - .env
    volumes:
      - /volumes/${INTEGRATOR_NAME}/${COMPANY_NAME}/odooREDIS:/data
    networks:
      - odoo_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
    security_opt:
      - no-new-privileges:true

networks:
  odoo_network:
    driver: bridge
    internal: true
    ipam:
      config:
        - subnet: 172.20.0.0/16
  traefik_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.21.0.0/16
